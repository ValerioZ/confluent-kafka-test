<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.leonardo.examples</groupId>
	<artifactId>kafka-incubator</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>kafka-incubator</name>
	<description>Demo project for Spring Boot with kafka</description>
	<properties>
		<java.version>1.8</java.version>
		<dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<dockerfile.repository>registry.sytes.net</dockerfile.repository>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>docker-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker/</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>**/*.yml</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-plugin.version}</version>
				<executions>
					<!--
                     Uncomment the section below to build the docker image with mvn package and and push it with mvn deploy
                    <execution>
                      <id>default</id>
                      <goals>
                        <goal>build</goal>
                        <goal>push</goal>
                      </goals>
                    </execution>
                    -->
					<execution>
						<id>tag-latest</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
							<goal>tag</goal>
							<goal>push</goal>
						</goals>
					</execution>
					<execution>
						<id>version</id>
						<phase>none</phase>
						<goals>
							<goal>build</goal>
							<goal>tag</goal>
							<goal>push</goal>
						</goals>
						<configuration>
							<tag>${project.version}</tag>
						</configuration>
					</execution>
					<execution>
						<id>commit</id>
						<phase>none</phase>
						<goals>
							<goal>build</goal>
							<goal>tag</goal>
							<goal>push</goal>
						</goals>
						<configuration>
<!--							<tag>${project.version}</tag>-->
							<tag>:00.00.001</tag>
						</configuration>
					</execution>
				</executions>
				<configuration>
<!--					<repository>${dockerfile.repository}/${project.artifactId}</repository>-->
					<repository>${dockerfile.repository}/test</repository>
					<contextDirectory>${project.build.directory}</contextDirectory>
					<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
